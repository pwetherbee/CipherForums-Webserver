{"version":3,"sources":["helpers/convert.js","main.js"],"names":["sha256","ascii","rightRotate","value","amount","mathPow","Math","pow","maxWord","lengthProperty","i","j","result","words","asciiBitLength","hash","h","k","primeCounter","isComposite","candidate","charCodeAt","w","slice","oldHash","i2","w15","w2","a","e","temp1","temp2","concat","b","toString","ascii_to_hexa","str","arr1","n","l","length","hex","Number","push","join","hex_to_dec","s","String","BigInt","dec_to_hex","bn","base","hex_to_text","hexx","fromCharCode","parseInt","substr","padText","commentStr","pad","characters","charAt","random","key_to_dec","key","dec_to_text","key_dec","xOrd","text","includes","split","text_to_dec","paddedText","commentXorHex","decrypt","text_hex","key_decimal","sleep","ms","Promise","resolve","setTimeout","myStorage","window","localStorage","commentContainer","document","querySelector","forumButtons","querySelectorAll","hideBtn","keyInput","addEventListener","type","thread1","thread2","thread3","forums","hexComments","forEach","convo","setItem","JSON","stringify","myClasses","getElementsByClassName","changeForum","id","parse","getItem","updateBox","btn","getAttribute","renderComments","renderComment","comment","insertAdjacentHTML","comms","console","log","textContent","keyXOR","keyText","keyDec","innerHTML","crazy","interval","setInterval","clearInterval"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\devFiles","sourcesContent":["var sha256 = function sha256(ascii) {\r\n  function rightRotate(value, amount) {\r\n    return (value >>> amount) | (value << (32 - amount));\r\n  }\r\n\r\n  var mathPow = Math.pow;\r\n  var maxWord = mathPow(2, 32);\r\n  var lengthProperty = \"length\";\r\n  var i, j; // Used as a counter across the whole file\r\n  var result = \"\";\r\n\r\n  var words = [];\r\n  var asciiBitLength = ascii[lengthProperty] * 8;\r\n\r\n  //* caching results is optional - remove/add slash from front of this line to toggle\r\n  // Initial hash value: first 32 bits of the fractional parts of the square roots of the first 8 primes\r\n  // (we actually calculate the first 64, but extra values are just ignored)\r\n  var hash = (sha256.h = sha256.h || []);\r\n  // Round constants: first 32 bits of the fractional parts of the cube roots of the first 64 primes\r\n  var k = (sha256.k = sha256.k || []);\r\n  var primeCounter = k[lengthProperty];\r\n  /*/\r\n      var hash = [], k = [];\r\n      var primeCounter = 0;\r\n      //*/\r\n\r\n  var isComposite = {};\r\n  for (var candidate = 2; primeCounter < 64; candidate++) {\r\n    if (!isComposite[candidate]) {\r\n      for (i = 0; i < 313; i += candidate) {\r\n        isComposite[i] = candidate;\r\n      }\r\n      hash[primeCounter] = (mathPow(candidate, 0.5) * maxWord) | 0;\r\n      k[primeCounter++] = (mathPow(candidate, 1 / 3) * maxWord) | 0;\r\n    }\r\n  }\r\n\r\n  ascii += \"\\x80\"; // Append Ƈ' bit (plus zero padding)\r\n  while ((ascii[lengthProperty] % 64) - 56) ascii += \"\\x00\"; // More zero padding\r\n  for (i = 0; i < ascii[lengthProperty]; i++) {\r\n    j = ascii.charCodeAt(i);\r\n    if (j >> 8) return; // ASCII check: only accept characters in range 0-255\r\n    words[i >> 2] |= j << (((3 - i) % 4) * 8);\r\n  }\r\n  words[words[lengthProperty]] = (asciiBitLength / maxWord) | 0;\r\n  words[words[lengthProperty]] = asciiBitLength;\r\n\r\n  // process each chunk\r\n  for (j = 0; j < words[lengthProperty]; ) {\r\n    var w = words.slice(j, (j += 16)); // The message is expanded into 64 words as part of the iteration\r\n    var oldHash = hash;\r\n    // This is now the undefinedworking hash\", often labelled as variables a...g\r\n    // (we have to truncate as well, otherwise extra entries at the end accumulate\r\n    hash = hash.slice(0, 8);\r\n\r\n    for (i = 0; i < 64; i++) {\r\n      var i2 = i + j;\r\n      // Expand the message into 64 words\r\n      // Used below if\r\n      var w15 = w[i - 15],\r\n        w2 = w[i - 2];\r\n\r\n      // Iterate\r\n      var a = hash[0],\r\n        e = hash[4];\r\n      var temp1 =\r\n        hash[7] +\r\n        (rightRotate(e, 6) ^ rightRotate(e, 11) ^ rightRotate(e, 25)) + // S1\r\n        ((e & hash[5]) ^ (~e & hash[6])) + // ch\r\n        k[i] +\r\n        // Expand the message schedule if needed\r\n        (w[i] =\r\n          i < 16\r\n            ? w[i]\r\n            : (w[i - 16] +\r\n                (rightRotate(w15, 7) ^ rightRotate(w15, 18) ^ (w15 >>> 3)) + // s0\r\n                w[i - 7] +\r\n                (rightRotate(w2, 17) ^ rightRotate(w2, 19) ^ (w2 >>> 10))) | // s1\r\n              0);\r\n      // This is only used once, so *could* be moved below, but it only saves 4 bytes and makes things unreadble\r\n      var temp2 =\r\n        (rightRotate(a, 2) ^ rightRotate(a, 13) ^ rightRotate(a, 22)) + // S0\r\n        ((a & hash[1]) ^ (a & hash[2]) ^ (hash[1] & hash[2])); // maj\r\n\r\n      hash = [(temp1 + temp2) | 0].concat(hash); // We don't bother trimming off the extra ones, they're harmless as long as we're truncating when we do the slice()\r\n      hash[4] = (hash[4] + temp1) | 0;\r\n    }\r\n\r\n    for (i = 0; i < 8; i++) {\r\n      hash[i] = (hash[i] + oldHash[i]) | 0;\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < 8; i++) {\r\n    for (j = 3; j + 1; j--) {\r\n      var b = (hash[i] >> (j * 8)) & 255;\r\n      result += (b < 16 ? 0 : \"\") + b.toString(16);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// ASCII TO HEX\r\n// ------------------------------------------------------------------------------------------------------------------------\r\nfunction ascii_to_hexa(str) {\r\n  var arr1 = [];\r\n  for (var n = 0, l = str.length; n < l; n++) {\r\n    var hex = Number(str.charCodeAt(n)).toString(16);\r\n    arr1.push(hex);\r\n  }\r\n  return arr1.join(\"\");\r\n}\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// HEX TO DECIMAL\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// function hex_to_dec(s) {\r\n//   function add(x, y) {\r\n//     var c = 0,\r\n//       r = [];\r\n//     var x = x.split(\"\").map(Number);\r\n//     var y = y.split(\"\").map(Number);\r\n//     while (x.length || y.length) {\r\n//       var s = (x.pop() || 0) + (y.pop() || 0) + c;\r\n//       r.unshift(s < 10 ? s : s - 10);\r\n//       c = s < 10 ? 0 : 1;\r\n//     }\r\n//     if (c) r.unshift(c);\r\n//     return r.join(\"\");\r\n//   }\r\n\r\n//   var dec = \"0\";\r\n//   s.split(\"\").forEach(function (chr) {\r\n//     var n = parseInt(chr, 16);\r\n//     for (var t = 8; t; t >>= 1) {\r\n//       dec = add(dec, dec);\r\n//       if (n & t) dec = add(dec, \"1\");\r\n//     }\r\n//   });\r\n//   return dec;\r\n// }\r\n\r\nfunction hex_to_dec(s) {\r\n  const hex = \"0x\" + String(s);\r\n  return BigInt(hex).toString(10);\r\n}\r\n\r\nfunction dec_to_hex(bn) {\r\n  var base = 16;\r\n  var hex = BigInt(bn).toString(base);\r\n  if (hex.length % 2) {\r\n    hex = \"0\" + hex;\r\n  }\r\n  return hex;\r\n}\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// DECIMAL TO HEX\r\n// function dec_to_hex(str) {\r\n//   // .toString(16) only works up to 2^53\r\n//   var dec = str.toString().split(\"\"),\r\n//     sum = [],\r\n//     hex = [],\r\n//     i,\r\n//     s;\r\n//   while (dec.length) {\r\n//     s = 1 * dec.shift();\r\n//     for (i = 0; s || i < sum.length; i++) {\r\n//       s += (sum[i] || 0) * 10;\r\n//       sum[i] = s % 16;\r\n//       s = (s - sum[i]) / 16;\r\n//     }\r\n//   }\r\n//   while (sum.length) {\r\n//     hex.push(sum.pop().toString(16));\r\n//   }\r\n//   return hex.join(\"\");\r\n// }\r\n\r\n// function dec_to_hex(str) {\r\n//   return parseInt(str).toString(16);\r\n// }\r\n\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// HEX TO ASCII\r\nfunction hex_to_text(hexx) {\r\n  var hex = hexx.toString(); //force conversion\r\n  var str = \"\";\r\n  for (var i = 0; i < hex.length; i += 2)\r\n    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n  return str;\r\n}\r\n\r\nfunction padText(commentStr) {\r\n  // use left padding with pipes on either side of comment\r\n  // determine length of string\r\n  let pad = \"\";\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (let i = 0; i < 64 - commentStr.length - 2; i++) {\r\n    // TODO: replace this insecure psuedorandom function with #crypto on node server instead\r\n    pad += characters.charAt(Math.random() * 62);\r\n  }\r\n  return `${pad}|${commentStr}|`;\r\n}\r\n\r\nfunction key_to_dec(key) {\r\n  return hex_to_dec(ascii_to_hexa(sha256(key)));\r\n}\r\n\r\nfunction dec_to_text(hex, key_dec) {\r\n  // const key_dec = hex_to_dec(ascii_to_hexa(sha256(key)));\r\n  const xOrd = BigInt(hex_to_dec(hex)) ^ BigInt(key_dec);\r\n  let text = hex_to_text(dec_to_hex(xOrd));\r\n  if (text.includes(\"|\")) {\r\n    text = text.split(\"|\")[1];\r\n  }\r\n  return text;\r\n}\r\n\r\nfunction text_to_dec(text, key) {\r\n  let paddedText = padText(text);\r\n  let commentXorHex = dec_to_hex(\r\n    BigInt(hex_to_dec(ascii_to_hexa(paddedText))) ^ BigInt(key_to_dec(key))\r\n  );\r\n  return commentXorHex;\r\n}\r\n\r\nfunction decrypt(text_hex, key_decimal) {\r\n  return dec_to_text(text_hex, key_decimal);\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\n// export { sha256, ascii_to_hexa, hex_to_dec, dec_to_hex, hex_to_text };\r\nexport { dec_to_text, text_to_dec, key_to_dec, decrypt, sleep };\r\n","\"use strict\";\r\n// SHA256 A STRING\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\nimport {\r\n  sha256,\r\n  ascii_to_hexa,\r\n  hex_to_dec,\r\n  hex_to_text,\r\n  dec_to_hex,\r\n} from \"./helpers/convert\";\r\n\r\n//Implement generating comment page\r\nlet myStorage = window.localStorage;\r\nlet commentContainer = document.querySelector(\".comments\");\r\nlet forumButtons = document.querySelectorAll(\".select\");\r\nlet hideBtn = document.querySelector(\".btn__hide\");\r\nlet keyInput = document.querySelector(\".key__textbox\");\r\n\r\nhideBtn.addEventListener(\"click\", () => {\r\n  keyInput.type = keyInput.type === \"text\" ? \"password\" : \"text\";\r\n});\r\n\r\nlet thread1 = [\r\n  \"7f741c422a0a640a08312043405371345970035e2d7442435b090b444375767e5c717d536444705c473a086a67077b744336480c534411535352530a0204034b\",\r\n  \"5d7c2049170f51371c2532784072543c6a542f7a2e44514d5c450e504152185b40175712535d5f5f520c111e1118584547415e004c4d425b471708594b4a4f4b\",\r\n  \"5b4402771d2d5f01092e3b545b7775015d6232431e597e6c6327104645524d4e50585b5f555c4612540d085f540f4310560e590c5359161257580f55545e424b\",\r\n];\r\n\r\nlet thread2 = [\r\n  \"7c67096225377e162f0d00506179590a4859306d3d4b405b750f306d50644d7e7962415c614e5a574e42005c52134e4041085b0f165e11125656065c5043454b\",\r\n  \"5a7928680b0c61252309104d787d4e3d465e1a5d0550555c52451150135559515847445d5740535f5a070112430453545c151841525207481459174c4211164b\",\r\n  \"6e5a0d62022c6e24102608415a485c12454e1250174c14575c080b505d43185a56455313105c5d465f0b0b5511155810590e5b0a165616125d1711594811164b\",\r\n  \"407b294a0211520526061d5f57495745445a0f4644555147400401501340594113525851424b42465206454558155f104109514152520453415b16675a554f4b\",\r\n];\r\n\r\nlet thread3 = [\r\n  \"636712702b1044250e0e1444745b5d27537c0c643c7d7b505b19145a505c18535d5316405f5e5e125c0700424241455f560a5d0f16560c5614450d545d59584b\",\r\n  \"535f127d02046300370f137c4476440d515a075d05185b5c1308075b1343505b40175f4110531251580f08575f151b10420e410d521016124d56424b5049094b\",\r\n  \"67660e743e3b6011130f16707a695233576808573c6b415c46152f614073794e43564453545d4a120a42115a5812175946415a0e4217031257580f55545e424b\",\r\n];\r\n\r\nlet forums = [thread1, thread2, thread3];\r\n\r\nlet hexComments = [];\r\n\r\nforums.forEach((convo, i) => {\r\n  myStorage.setItem(`convo${i + 1}`, JSON.stringify(convo));\r\n});\r\n\r\nlet myClasses = document.getElementsByClassName(\"formatHex\");\r\n\r\nfunction changeForum(id) {\r\n  hexComments = JSON.parse(myStorage.getItem(`convo${id}`));\r\n  updateBox();\r\n}\r\n\r\nforumButtons.forEach((btn) => {\r\n  btn.addEventListener(\"click\", (e) => {\r\n    let i = btn.getAttribute(\"data-index\");\r\n    changeForum(i);\r\n  });\r\n});\r\n\r\nchangeForum(2);\r\n\r\nrenderComments(hexComments);\r\n\r\nfunction renderComment(comment) {\r\n  commentContainer.insertAdjacentHTML(\r\n    \"afterbegin\",\r\n    `\r\n  <div class=\"insideForum\">\r\n    <p class=\"formatHex\">\r\n        ${comment}\r\n    </p>\r\n  </div>\r\n  `\r\n  );\r\n  myClasses = document.getElementsByClassName(\"formatHex\");\r\n}\r\n\r\nfunction renderComments(comms) {\r\n  comms.forEach(renderComment);\r\n}\r\n\r\nfor (var i = 0; i < myClasses.length; i++) {\r\n  console.log(myClasses[i].textContent);\r\n}\r\n\r\nfunction keyXOR(key) {\r\n  return hex_to_dec(ascii_to_hexa(sha256(key)));\r\n}\r\n\r\nfunction updateBox() {\r\n  let keyText = keyInput.value;\r\n  let keyDec = keyXOR(keyText);\r\n  for (var i = 0; i < myClasses.length; i++) {\r\n    const xOrd = BigInt(hex_to_dec(hexComments[i])) ^ BigInt(keyDec);\r\n    let text = hex_to_text(dec_to_hex(xOrd));\r\n    if (text.includes(\"|\")) {\r\n      text = text.split(\"|\")[1];\r\n    }\r\n    myClasses[i].innerHTML = text;\r\n  }\r\n}\r\n\r\n//Implement crazy hacker view\r\n\r\nfunction crazy() {\r\n  keyInput.value = dec_to_hex(600 * Math.random());\r\n  updateBox();\r\n}\r\n\r\nlet interval = setInterval(crazy, 20);\r\n\r\nsetTimeout(() => {\r\n  clearInterval(interval);\r\n  keyInput.value = \"default_key\";\r\n  updateBox();\r\n}, 500);\r\n\r\n// keyInput.addEventListener(\"keypress\", (e) => {\r\n//   console.log(e.key);\r\n//   if (e.key === \"Enter\") {\r\n//     updateBox();\r\n//   }\r\n// });\r\n\r\nkeyInput.addEventListener(\"input\", updateBox);\r\n\r\n//Implement add comment\r\n"]}